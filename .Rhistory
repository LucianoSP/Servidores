shiny::runApp()
install.packages(c("BH", "ffbase", "RecordLinkage", "shiny", "testthat", "XML"))
install.packages(c("BH", "ffbase", "RecordLinkage", "shiny", "testthat", "XML"))
install.packages("DT")
devtools::install_github("rstudio/DT")
install.packages("Rtools")
library(devtools)
shiny::runApp()
shiny::runApp()
shiny::runApp()
servidores <- readRDS("servidores.rds")
servidores[54816,]
servidores %>% filter(54816)
servidores %>% filter(row=54816)
library(dplyr)
servidores %>% filter(row=54816)
servidores %>% slice(54816)
servidores %>% slice(54816) %>% select(NOME)
servidores %>% slice(54816) %>% select(NOME) %>% as.character()
servidores %>% slice(54816) %>% select(NOME) %>% as.matrix() %>% c()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("C:/R/dados/201503_Servidores")
a= read.csv("20150331_Remuneracao.csv")
a= read.csv("20150331_Remuneracao.csv")
a= read.csv("20150331_Remuneracao.csv", sep = ";")
a= read.csv("20150331_Remuneracao.csv", sep = "")
View(a)
a= read.table("20150331_Remuneracao.csv", sep = "\t", header = true)
library(data.table)
a= read.table("20150331_Remuneracao.csv", sep = "\t", header = true)
a= read.table("20150331_Remuneracao.csv", sep = "\t", header = TRUE)
View(a)
str(a)
remun= a
rm(a)
cad = read.table("20150331_Cadastro.csv", sep = "\t", header = TRUE)
cad = read.table("20150331_Cadastro.csv", sep = "\t", header = TRUE, fill = TRUE)
View(cad)
library(dplyr)
cad = cad $>$ select(Id_SERVIDOR_PORTAL, NOME, DESCRICAO_CARGO, FUNCAO, ORG_LOTACAO, ORGSUP_LOTACAO, ORG_EXERCICIO, ORGSUP_EXERCICIO, SITUACAO_VINCULO, REGIME_JURIDICO, UF_EXERCICIO)
cad = cad %>% select(Id_SERVIDOR_PORTAL, NOME, DESCRICAO_CARGO, FUNCAO, ORG_LOTACAO, ORGSUP_LOTACAO, ORG_EXERCICIO, ORGSUP_EXERCICIO, SITUACAO_VINCULO, REGIME_JURIDICO, UF_EXERCICIO)
View(cad)
View(remun)
summary(remun)
View(remun)
remun = remun %>% select(ID_SERVIDOR_PORTAL, REMUNERAÇÃO.BÁSICA.BRUTA..R.., REMUNERAÇÃO.APÓS.DEDUÇÕES.OBRIGATÓRIAS..R.., TOTAL.DE.VERBAS.INDENIZATÓRIAS..R....., TOTAL.DE.HONORÁRIOS..JETONS. )
names(renum)
names(remun)
names(remun) = c("ID", "REMUNERACAO_BRUTA", "REMUNERACAO_LIQUIDA", "VERBAS", "JETONS")
summary(remun)
str(remun)
remun %>% filter(JETONS != "")
remun %>% filter(JETONS != "0,00")
remun %>% arrange(desc(VERBAS))
remun %>% arrange(desc(VERBAS)) %>% top_n(10)
View(cad)
cad %>% rename(Id_SERVIDOR_PORTAL = "ID")
cad %>% rename("Id_SERVIDOR_PORTAL" = "ID")
cad %>% rename("ID" = "Id_SERVIDOR_PORTAL")
cad %>% rename(ID = Id_SERVIDOR_PORTAL)
cad = cad %>% rename(ID = Id_SERVIDOR_PORTAL)
str(cad)
cad %>% select(NOME) %>% group_by(NOME) %>% summarise(N=n()) %>% arrange(desc(N))
cad %>% select(ID) %>% group_by(NOME) %>% summarise(N=n()) %>% arrange(desc(N))
cad %>% select(ID, NOME) %>% group_by(ID, NOME) %>% summarise(N=n()) %>% arrange(desc(N))
cad %>% select(ID, NOME) %>% group_by(ID) %>% summarise(N=n()) %>% arrange(desc(N))
cad %>% select(ID, NOME) %>% group_by(ID) %>% summarise(N=n()) %>% arrange(desc(N)) %>% top_n(20)
a=cad %>% select(ID, NOME) %>% group_by(ID) %>% summarise(N=n()) %>% arrange(desc(N)) %>% top_n(20)
cad %>% filter(ID %in% a)
View(a)
cad %>% filter(ID %in% a$ID)
b=cad %>% filter(ID %in% a$ID)
View(b)
c = left_join(remun, cad, by="ID")
c = left_join(remun, cad, by=ID)
left_join(remun, cad, by=ID)
left_join(remun, cad, by="ID")
left_join(remun, cad, by = ID)
left_join(remun, cad, by = "ID")
as.integer(cad$ID)
as.integer(as.character(cad$ID))
cad$ID = as.integer(as.character(cad$ID))
servidores = left_join(remun, cad, by = "ID")
View(servidores)
a = servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1) %>% arrange(desc(N))
View(a)
b = servidores %>% filter(ID %in% a$ID)
View(b)
View(servidores)
View(servidores)
a= servidores %>% select(ID, DESCRICAO_CARGO)
View(a)
desc_cargo= servidores %>% select(ID, DESCRICAO_CARGO)
funcao = servidores %>% select(ID, FUNCAO)
cargos = full_join(desc_cargo, funcao, by = ID)
cargos = full_join(desc_cargo, funcao, by = "ID")
View(cargos)
View(funcao)
funcao = funcao %>% distinct()
desc_cargo = desc_cargo %>% distinct()
cargos = left_join(desc_cargo, funcao, by = "ID")
View(cargos)
View(desc_cargo)
desc_cargo = desc_cargo %>% filter(DESCRICAO_CARGO != "")
funcao = funcao %>% filter(FUNCAO != "")
View(funcao)
cargos = left_join(desc_cargo, funcao, by = "ID")
View(cargos)
servidores %>% select(- DESCRICAO_CARGO, - FUNCAO )
servidores = servidores %>% select(-DESCRICAO_CARGO, -FUNCAO)
View(servidores)
servidores = servidores %>% distinct()
servidores = left_join(servidores, cargos, by="ID")
View(servidores)
servidores %>% group_by(NOME) %>% count()
servidores %>% group_by(NOME) %>% count(ID)
servidores %>% group_by(NOME) %>% summarise(N=n())
servidores %>% group_by(NOME) %>% summarise(N=n()) %>% filter(N>1)
servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1)
servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1)
servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1) %>% select(ID) %>% as.matrix() %>% c()
d = servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1) %>% select(ID) %>% as.matrix() %>% c()
e = servidores %>% filter(ID %in% d)
View(e)
servidores %>% filter(SITUACAO_VINCULO == "APOSENTADO")
servidores %>% filter(SITUACAO_VINCULO == "APOSENTADO") %>% count()
servidores %>% filter(SITUACAO_VINCULO == "APOSENTADO") %>% count()
library(DT)
servidores %>% DT[1:10,,]
servidores %>% DT[1:10,,]
DT[1,,]
