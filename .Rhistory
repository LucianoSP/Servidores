View(servidores)
a = servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1) %>% arrange(desc(N))
View(a)
b = servidores %>% filter(ID %in% a$ID)
View(b)
View(servidores)
View(servidores)
a= servidores %>% select(ID, DESCRICAO_CARGO)
View(a)
desc_cargo= servidores %>% select(ID, DESCRICAO_CARGO)
funcao = servidores %>% select(ID, FUNCAO)
cargos = full_join(desc_cargo, funcao, by = ID)
cargos = full_join(desc_cargo, funcao, by = "ID")
View(cargos)
View(funcao)
funcao = funcao %>% distinct()
desc_cargo = desc_cargo %>% distinct()
cargos = left_join(desc_cargo, funcao, by = "ID")
View(cargos)
View(desc_cargo)
desc_cargo = desc_cargo %>% filter(DESCRICAO_CARGO != "")
funcao = funcao %>% filter(FUNCAO != "")
View(funcao)
cargos = left_join(desc_cargo, funcao, by = "ID")
View(cargos)
servidores %>% select(- DESCRICAO_CARGO, - FUNCAO )
servidores = servidores %>% select(-DESCRICAO_CARGO, -FUNCAO)
View(servidores)
servidores = servidores %>% distinct()
servidores = left_join(servidores, cargos, by="ID")
View(servidores)
servidores %>% group_by(NOME) %>% count()
servidores %>% group_by(NOME) %>% count(ID)
servidores %>% group_by(NOME) %>% summarise(N=n())
servidores %>% group_by(NOME) %>% summarise(N=n()) %>% filter(N>1)
servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1)
servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1)
servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1) %>% select(ID) %>% as.matrix() %>% c()
d = servidores %>% group_by(ID) %>% summarise(N=n()) %>% filter(N>1) %>% select(ID) %>% as.matrix() %>% c()
e = servidores %>% filter(ID %in% d)
View(e)
servidores %>% filter(SITUACAO_VINCULO == "APOSENTADO")
servidores %>% filter(SITUACAO_VINCULO == "APOSENTADO") %>% count()
servidores %>% filter(SITUACAO_VINCULO == "APOSENTADO") %>% count()
library(DT)
servidores %>% DT[1:10,,]
servidores %>% DT[1:10,,]
DT[1,,]
library(data.table)
library(dplyr)
getwd()
setwd("C:/R/Data/201503_Servidores")
remun = read.table("20150331_Remuneracao.csv", sep = "\t", header = TRUE)
cad = read.table("20150331_Cadastro.csv", sep = "\t", header = TRUE, fill = TRUE)
cad = cad %>% select(Id_SERVIDOR_PORTAL, NOME, DESCRICAO_CARGO, FUNCAO, ORG_LOTACAO, ORGSUP_LOTACAO, ORG_EXERCICIO, ORGSUP_EXERCICIO, SITUACAO_VINCULO, REGIME_JURIDICO, UF_EXERCICIO)
remun = remun %>% select(ID_SERVIDOR_PORTAL, REMUNERAÇÃO.BÁSICA.BRUTA..R.., REMUNERAÇÃO.APÓS.DEDUÇÕES.OBRIGATÓRIAS..R.., TOTAL.DE.VERBAS.INDENIZATÓRIAS..R....., TOTAL.DE.HONORÁRIOS..JETONS. )
names(remun) = c("ID", "REMUNERACAO_BRUTA", "REMUNERACAO_LIQUIDA", "VERBAS", "JETONS")
cad = cad %>% rename(ID = Id_SERVIDOR_PORTAL)
cad$ID = as.integer(as.character(cad$ID))
desc_cargo= servidores %>% select(ID, DESCRICAO_CARGO)
funcao = servidores %>% select(ID, FUNCAO)
funcao = funcao %>% distinct()
desc_cargo = desc_cargo %>% distinct()
desc_cargo = desc_cargo %>% filter(DESCRICAO_CARGO != "")
funcao = funcao %>% filter(FUNCAO != "")
servidores = servidores %>% select(-DESCRICAO_CARGO, -FUNCAO)
servidores = servidores %>% distinct()
servidores = left_join(servidores, cargos, by="ID")
View(remun)
View(cad)
View(cad)
desc_cargo= cad %>% select(ID, DESCRICAO_CARGO)
funcao = cad %>% select(ID, FUNCAO)
funcao = funcao %>% distinct()
desc_cargo = desc_cargo %>% distinct()
View(desc_cargo)
desc_cargo = desc_cargo %>% filter(DESCRICAO_CARGO != "")
funcao = funcao %>% filter(FUNCAO != "")
View(desc_cargo)
View(funcao)
View(cad)
View(remun)
remun1 = remun %>% distinct(ID)
rm(remun1)
servidores = cad %>% select(-DESCRICAO_CARGO, -FUNCAO)
servidores = servidores %>% distinct()
servidores = left_join(servidores, desc_cargo, by="ID")
servidores = left_join(servidores, funcao, by="ID")
View(servidores)
servidores %>% group_by(NOME) %>% summarise(N=n()) %>% arrange(desc(N))
servidores %>% group_by(ID) %>% summarise(N=n()) %>% arrange(desc(N))
servidores %>% filter(ID == "1048068")
save(servidores, file = "servidores.rds", ascii = TRUE)
servidores = readRDS(servidores)
servidores = readRDS("servidores.rds")
servidores <- readRDS("servidores.rds")
saveRDS(servidores, file = "servidores.rds")
servidores <- readRDS("servidores.rds")
View(servidores)
setwd("~/GitHub/Servidores/Servidores")
shiny::runApp()
shiny::runApp()
servidores <- readRDS("servidores.rds")
fix(servidores)
setwd("C:/R/Data/201503_Servidores")
servidores <- readRDS("servidores.rds")
remun = read.table("20150331_Remuneracao.csv", sep = "\t", header = TRUE)
remun = read.table("20150331_Remuneracao.csv", sep = "\t", header = TRUE, fill = TRUE)
remun = read.table("20150331_Remuneracao.csv", sep = "\t", header = TRUE, fill = TRUE,  quote = "")
cad = read.table("20150331_Cadastro.csv", sep = "\t", header = TRUE, fill = TRUE,  quote = "")
cad = cad %>% select(Id_SERVIDOR_PORTAL, NOME, DESCRICAO_CARGO, FUNCAO, ORG_LOTACAO, ORGSUP_LOTACAO, ORG_EXERCICIO, ORGSUP_EXERCICIO, SITUACAO_VINCULO, REGIME_JURIDICO, UF_EXERCICIO)
remun = remun %>% select(ID_SERVIDOR_PORTAL, REMUNERAÇÃO.BÁSICA.BRUTA..R.., REMUNERAÇÃO.APÓS.DEDUÇÕES.OBRIGATÓRIAS..R.., TOTAL.DE.VERBAS.INDENIZATÓRIAS..R....., TOTAL.DE.HONORÁRIOS..JETONS. )
names(remun) = c("ID", "REMUNERACAO_BRUTA", "REMUNERACAO_LIQUIDA", "VERBAS", "JETONS")
cad = cad %>% rename(ID = Id_SERVIDOR_PORTAL)
cad$ID = as.integer(as.character(cad$ID))
desc_cargo= cad %>% select(ID, DESCRICAO_CARGO)
funcao = cad %>% select(ID, FUNCAO)
funcao = funcao %>% distinct()
desc_cargo = desc_cargo %>% distinct()
desc_cargo = desc_cargo %>% filter(DESCRICAO_CARGO != "")
funcao = funcao %>% filter(FUNCAO != "")
servidores = cad %>% select(-DESCRICAO_CARGO, -FUNCAO)
servidores = servidores %>% distinct()
servidores = left_join(servidores, desc_cargo, by="ID")
servidores = left_join(servidores, funcao, by="ID")
servidores = left_join(remun, servidores, by="ID")
save(servidores, file = "servidores.rds", ascii = TRUE)
saveRDS(servidores, file = "servidores.rds")
servidores <- readRDS("servidores.rds")
View(servidores)
shiny::runApp('~/GitHub/Servidores/Servidores')
servidores <- readRDS("servidores.rds")
fix(servidores)
servidores <- readRDS("servidores.rds")
View(servidores)
View(servidores)
shiny::runApp('~/GitHub/Servidores/Servidores')
str(servidores)
servidores$REMUNERACAO_BRUTA = as.numeric(servidores$REMUNERACAO_BRUTA)
servidores$REMUNERACAO_LIQUIDA = as.numeric(servidores$REMUNERACAO_LIQUIDA)
servidores$VERBAS = as.numeric(servidores$VERBAS)
servidores$JETONS = as.numeric(servidores$JETONS)
str(serverInfo)
str(servidores)
saveRDS(servidores, file = "servidores.rds")
shiny::runApp('~/GitHub/Servidores/Servidores')
servidores <- readRDS("servidores.rds")
str(servidores)
shiny::runApp('~/GitHub/Servidores/Servidores')
REMUN_TOTAL = sum(servidores$REMUNERACAO_BRUTA)
servidores <- readRDS("servidores.rds")
str(servidores)
shiny::runApp('~/GitHub/Servidores/Servidores')
servidores <- readRDS("servidores.rds")
summary(servidores)
setwd("~/GitHub/Servidores/Servidores")
servidores <- readRDS("servidores.rds")
str(servidores)
servidores$REMUNERACAO_BRUTA = as.numeric(servidores$REMUNERACAO_BRUTA)
servidores$REMUNERACAO_LIQUIDA = as.numeric(servidores$REMUNERACAO_LIQUIDA)
servidores$VERBAS = as.numeric(servidores$VERBAS)
servidores$JETONS = as.numeric(servidores$JETONS)
saveRDS(servidores, file = "servidores.rds")
shiny::runApp()
View(servidores)
setwd("C:/R/Data/201503_Servidores")
Sys.getlocale()
sessionInfo()
setwd("C:/R/Data/201503_Servidores")
library(data.table)
library(dplyr)
remun = read.table("20150331_Remuneracao.csv", sep = "\t", header = TRUE, fill = TRUE,  quote = "", dec = ",", fileEncoding = 'ISO8859-1' )
cad = read.table("20150331_Cadastro.csv", sep = "\t", header = TRUE, fill = TRUE,  quote = "", fileEncoding = 'ISO8859-1')
cad = cad %>% select(Id_SERVIDOR_PORTAL, NOME, DESCRICAO_CARGO, FUNCAO, ORG_LOTACAO, ORGSUP_LOTACAO, ORG_EXERCICIO, ORGSUP_EXERCICIO, SITUACAO_VINCULO, REGIME_JURIDICO, UF_EXERCICIO)
remun = remun %>% select(ID_SERVIDOR_PORTAL, REMUNERAÇÃO.BÁSICA.BRUTA..R.., REMUNERAÇÃO.APÓS.DEDUÇÕES.OBRIGATÓRIAS..R.., TOTAL.DE.VERBAS.INDENIZATÓRIAS..R....., TOTAL.DE.HONORÁRIOS..JETONS. )
names(remun) = c("ID", "REMUNERACAO_BRUTA", "REMUNERACAO_LIQUIDA", "VERBAS", "JETONS")
cad = cad %>% rename(ID = Id_SERVIDOR_PORTAL)
cad$ID = as.integer(as.character(cad$ID))
desc_cargo= cad %>% select(ID, DESCRICAO_CARGO)
funcao = cad %>% select(ID, FUNCAO)
funcao = funcao %>% distinct() %>% filter(FUNCAO != "")
desc_cargo = desc_cargo %>% distinct() %>% filter(DESCRICAO_CARGO != "")
servidores = cad %>% select(-DESCRICAO_CARGO, -FUNCAO)
servidores = servidores %>% distinct()
servidores = left_join(servidores, desc_cargo, by="ID")
servidores = left_join(servidores, funcao, by="ID")
servidores = left_join(remun, servidores, by="ID")
servidores$REMUNERACAO_BRUTA = as.numeric(servidores$REMUNERACAO_BRUTA)
servidores$REMUNERACAO_LIQUIDA = as.numeric(servidores$REMUNERACAO_LIQUIDA)
servidores$VERBAS = as.numeric(servidores$VERBAS)
servidores$JETONS = as.numeric(servidores$JETONS)
View(servidores)
saveRDS(servidores, file = "servidores2.rds")
write.csv(servidores, file = "servidores.csv")
a = read.csv("servidores.csv")
View(a)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("ggthemes")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("C:/documentos/PPA 2016-2019/tabelas")
programas = read.csv(file = "programas.csv", header = TRUE, sep = ";")
View(programas)
programas = read.csv(file = "programas.csv", header = TRUE, sep = ";")
metas = read.csv(file = "metas.csv", header = TRUE, sep = ";")
iniciativas = read.csv(file = "iniciativas.csv", header = TRUE, sep = ";")
objetivos = read.csv(file = "objetivos.csv", header = TRUE, sep = ";")
View(metas)
View(objetivos)
View(programas)
library(dplyr)
metas = metas %>% select(Programa, Objetivo, Meta.do.Objetivo, Descrição)
View(metas)
View(iniciativas)
iniciativas = iniciativas %>% select(Programa, Objetivo, Iniciativa, Título_Iniciativa = Título)
View(iniciativas)
iniciativas = iniciativas %>% select(Programa, Objetivo, Iniciativa, Titulo_Iniciativa = Título)
iniciativas = read.csv(file = "iniciativas.csv", header = TRUE, sep = ";")
iniciativas = iniciativas %>% select(Programa, Objetivo, Iniciativa, Titulo_Iniciativa = Título)
View(iniciativas)
View(objetivos)
View(metas)
metas = read.csv(file = "metas.csv", header = TRUE, sep = ";")
metas = metas %>% select(Programa, Objetivo, Codigo_Meta = Meta.do.Objetivo, Descricao_Meta = Descrição)
View(objetivos)
objetivos = objetivos %>% select(Programa, Objetivo, Enunciado, Órgão)
View(programas)
programas = programas %>% select(Programa, Titulo_Programa = Título)
View(programas)
tabela_metas = left_join(metas, objetivos, by="Objetivo")
View(tabela_metas)
tabela_metas = tabela_metas %>% select(Programa = Programa.x, Objetivo, Órgão, Enunciado, Codigo_Meta, Descricao_Meta)
View(tabela_metas)
names(tabela_metas)
programas = read.csv(file = "programas.csv", header = TRUE, sep = ";")
metas = read.csv(file = "metas.csv", header = TRUE, sep = ";")
iniciativas = read.csv(file = "iniciativas.csv", header = TRUE, sep = ";")
objetivos = read.csv(file = "objetivos.csv", header = TRUE, sep = ";")
metas = metas %>% select(Programa, Objetivo, Codigo_Meta = Meta.do.Objetivo, Descricao_Meta = Descrição)
iniciativas = iniciativas %>% select(Programa, Objetivo, Iniciativa, Titulo_Iniciativa = Título)
objetivos = objetivos %>% select(Programa, Objetivo, Enunciado, Órgão)
programas = programas %>% select(Programa, Titulo_Programa = Título)
tabela_metas = left_join(metas, objetivos, by="Objetivo")
tabela_metas = tabela_metas %>% select(Programa = Programa.x, Objetivo, Orgao = Órgão, Enunciado, Codigo_Meta, Descricao_Meta)
View(tabela_metas)
View(iniciativas)
tabela_iniciativas = left_join(iniciativas, programa, by="Programa")
tabela_iniciativas = left_join(iniciativas, programas, by="Programa")
View(tabela_iniciativas)
tabela_iniciativas = left_join(tabela_iniciativas, objetivos, by="Objetivo")
View(tabela_iniciativas)
tabela_iniciativas = tabela_iniciativas %>% select(Titulo_Programa, Objetivo, Enunciado, Iniciativa, Titulo_Iniciativa)
View(tabela_iniciativas)
tabela_iniciativas %>% group_by(Titulo_Programa, Enunciado)
tabela_iniciativas %>% arrange(Titulo_Programa, Enunciado)
tabela_iniciativas =  tabela_iniciativas %>% arrange(Titulo_Programa, Enunciado)
View(tabela_iniciativas)
View(tabela_metas)
tabela_metas =  left_join(tabela_metas, programas, by="Pr"Programa")
tabela_metas =  left_join(tabela_metas, programas, by="Programa")
View(tabela_metas)
tabela_metas =  tabela_metas %>% select(Programa, Titulo_Programa, Objetivo, Enunciado, Orgao, Codigo_Meta, Descricao_Meta)
View(tabela_metas)
tabela_metas = tabela_metas %>% arrange(Programa, Objetivo)
View(tabela_metas)
View(metas)
View(objetivos)
tabela_iniciativas %>% group_by(Titulo_Programa) %>% summarise(n())
tabela_iniciativas %>% group_by(Enunciado) %>% summarise(n())
tabela_iniciativas %>% filter(is.na(Enunciado)) %>% group_by(Objetivo) %>% summarise(n())
tabela_iniciativas %>% filter(is.na(Enunciado)) %>% group_by(Objetivo) %>% summarise(n())
tabela_iniciativas %>% filter(!is.na(Enunciado)) %>% group_by(Objetivo) %>% summarise(n())
View(objetivos)
a = tabela_iniciativas %>% filter(is.na(Enunciado))
View(a)
a %>% distinct(Objetivo)
a %>% distinct(Objetivo) %>% summarise(n())
View(tabela_metas)
b = tabela_metas %>% filter(is.na(Enunciado))
b %>% distinct(Objetivo) %>% summarise(n())
View(programas)
for (i in programas$Programa) {
print(i)
}
for (prog in tabela_metas$Programa) {
print(prog)
for (objet in tabela_metas$Objetivo ) {
print(objet)
}
}
for (prog in tabela_metas$Programa) {
print(prog)
for (objet in (tabela_metas$Objetivo %>% distinct())) {
print(objet)
}
}
a = tabela_metas %>% select(Objetivo) %>% distinct() %>% as.matrix() %>% c()
for (prog in tabela_metas$Programa) {
print(prog)
for (objet in a) {
print(objet)
}
for (prog in tabela_metas$Programa) {
print(prog)
for (objet in a) {
print(objet)
}
}
for (prog in tabela_metas$Programa) {
for (objet in lista_objetivos) {
tabela_metas %>% filter(Programa == prog, Objetivo == objet) %>% select(Descricao_Meta) %>% as.matrix()%>% c() %>% print()
}
}
lista_objetivos = tabela_metas %>% select(Objetivo) %>% distinct() %>% as.matrix() %>% c()
for (prog in tabela_metas$Programa) {
for (objet in lista_objetivos) {
tabela_metas %>% filter(Programa == prog, Objetivo == objet) %>% select(Descricao_Meta) %>% as.matrix()%>% c() %>% print()
}
}
for (prog in tabela_metas$Programa) {
for (objet in lista_objetivos) {
tabela_metas %>% filter(Programa == prog, Objetivo == objet) %>% select(Descricao_Meta)
}
}
for (prog in tabela_metas$Programa) {
for (objet in lista_objetivos) {
a = tabela_metas %>% filter(Programa == prog, Objetivo == objet) %>% select(Descricao_Meta)
print(a)
}
}
View(programas)
tabela_metas %>% filter(Programa == 2012) %>% select(Titulo_Programa)
tabela_metas %>% filter(Programa == 2012) %>% select(Titulo_Programa) %>% distinct()
tabela_metas %>% filter(Programa == 2012) %>% select(Titulo_Programa) %>% distinct() %>% as.matrix()
tabela_metas %>% filter(Programa == 2012) %>% select(Titulo_Programa) %>% distinct() %>% as.matrix() %>% c()
for (prog in tabela_metas$Programa) {
print(prog)
for (objet in lista_objetivos) {
print(objet)
for (ini in tabela_metas$Descricao_Meta) {
print(ini)
}
}
}
View(programas)
for (prog in tabela_metas$Titulo_Programa) {
print("Programa: ", prog)
for (objet in lista_objetivos) {
print("Objetivo: ", objet)
for (meta in tabela_metas$Descricao_Meta) {
print("Meta: ", meta)
for (iniciativa in tabela_iniciativas$Titulo_Iniciativa) {
print("Iniciativa: ", iniciativa)
}
}
}
for (prog in tabela_metas$Titulo_Programa) {
print("Programa: ", prog)
for (objet in lista_objetivos) {
print("Objetivo: ", objet)
for (meta in tabela_metas$Descricao_Meta) {
print("Meta: ", meta)
for (iniciativa in tabela_iniciativas$Titulo_Iniciativa) {
print("Iniciativa: ", iniciativa)
}}
}
}
for (prog in tabela_metas$Titulo_Programa) {
print("Programa: ", prog)
for (objet in lista_objetivos) {
print("Objetivo: ", objet)
for (meta in tabela_metas$Descricao_Meta) {
print("Meta: ", meta)}
for (iniciativa in tabela_iniciativas$Titulo_Iniciativa) {
print("Iniciativa: ", iniciativa)
}
}
}
for (prog in tabela_metas$Titulo_Programa) {
print(paste("Programa: ", prog))
for (objet in lista_objetivos) {
print(paste("Objetivo: ", objet))
for (meta in tabela_metas$Descricao_Meta) {
print(paste("Meta: ", meta))}
for (iniciativa in tabela_iniciativas$Titulo_Iniciativa) {
print(paste("Iniciativa: ", iniciativa))
}
}
}
setwd("C:/documentos/PPA 2016-2019/tabelas")
View(objetivos)
tabela_metas = tabela_metas %>% filter(!is.na(Enunciado))
tabela_iniciativas = tabela_iniciativas %>% filter(!is.na(Enunciado))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
servidores <- readRDS("servidores2.rds")
View(servidores)
servidores %>% filter(ORG_EXERCICIO == "BANCO CENTRAL") %>% group_by(ORG_EXERCICIO) %>% summarise(N=n())
View(servidores)
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N=n())
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N=n(), Custo=sum(REMUNERACAO_BRUTA))
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA))
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(Custo, N_Servidores, fill = ORG_EXERCICIO))
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(Custo, N_Servidores, fill = ORG_EXERCICIO)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(Custo, N_Servidores, fill = ORG_EXERCICIO)) +
geom_point()
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORGSUP_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity")
shiny::runApp()
shiny::runApp()
shiny::runApp()
servidores %>% filter(ORG_EXERCICIO == 'MINISTERIO DA FAZENDA') %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>%
ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == 'MINISTERIO DA FAZENDA') %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>%
ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == 'MINISTERIO DA FAZENDA') %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>%
ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO %in% input$orgaos1) %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA))
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA))
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO == "MINISTERIO DA FAZENDA") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, size = Custo)) +
geom_point()
servidores %>% filter(ORG_EXERCICIO %in% "MINISTERIO DA FAZENDA|MINISTERIO DA SAUDE") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, size = Custo)) +
geom_point()
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, size = Custo)) +
geom_point()
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, size = Custo)) +
geom_point()
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE") %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, size = Custo)) +
geom_point()
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, size = Custo)) +
geom_point()
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>%  ggplot(aes(ORG_EXERCICIO, Custo, N_Servidores)) +
geom_bar(stat = "identity")
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>%  ggplot(aes(ORG_EXERCICIO, Custo, N_Servidores)) +
geom_bar(stat = "identity", position = "dodge")
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>%  ggplot(aes(ORG_EXERCICIO, Custo, fill = N_Servidores)) +
geom_bar(stat = "identity", position = "dodge")
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>%  ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = Custo)) +
geom_bar(stat = "identity", position = "dodge")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
servidores %>% filter(ORG_EXERCICIO %in% input$orgaos1) %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA)) %>% arrange(desc(N_Servidores))
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO) %>% summarise(N_Servidores=n(), Custo=sum(REMUNERACAO_BRUTA))
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n())
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5)
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5)
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores, fill = DESCRICAO_CARGO)) +
geom_bar(stat = "identity", position = "dodge")
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5) %>% ggplot(aes(ORG_EXERCICIO, N, fill = DESCRICAO_CARGO)) +
geom_bar(stat = "identity", position = "dodge")
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5) %>% ggplot(aes(ORG_EXERCICIO, N, fill = DESCRICAO_CARGO)) +
geom_bar(stat = "identity", position = "stack")
shiny::runApp()
shiny::runApp()
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5) %>% ggplot(aes(ORG_EXERCICIO, N, fill = DESCRICAO_CARGO)) +
geom_bar(stat = "identity", position = "stack") + facet_wrap(~ORG_EXERCICIO)
shiny::runApp()
shiny::runApp()
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5) %>% ggplot(aes(ORG_EXERCICIO, N_Servidores)) +
facet_wrap(~ORG_EXERCICIO) +
geom_bar(stat = "identity", position = "dodge")
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5) %>% ggplot(aes(ORG_EXERCICIO, N)) +
facet_wrap(~ORG_EXERCICIO) +
geom_bar(stat = "identity", position = "dodge")
servidores %>% filter(ORG_EXERCICIO %in% c("MINISTERIO DA FAZENDA","MINISTERIO DA SAUDE")) %>% group_by(ORG_EXERCICIO, DESCRICAO_CARGO) %>% summarise(N=n()) %>% top_n(5) %>% ggplot(aes(DESCRICAO_CARGO, N)) +
facet_wrap(~ORG_EXERCICIO) +
geom_bar(stat = "identity", position = "dodge")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
